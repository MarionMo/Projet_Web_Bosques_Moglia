pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--init call 1 time at launch
function _init()
	titleinit()
end

function titleinit()
	mode = 0
	music(7)

end
-- les codes des différentes mode de jeu
-- 0 => le menu
-- 1 => le jeu tourne
-- 2 => ecran de game over
-- 3 => ecran de victoire
function gamestart()
	mode = 1
	music(-1,200)

	delay=time()
	timer=0
	offset=0
	scrolling=true
	cinematique=false
	cooldown_degat =0
	cooldown_tir=0
	cooldown_recharger = false
	cooldown_recharger_projectile = false
	--
	spells={}
	--levels
	level1 = false
	lvl1_success = false
	monstres={}
	
	--
 	music(1)
	palt(14, true)
	--sprites
	----- coordonnées de départ du hero
	p = make_actor(16,16,0) -- debut du jeu
	--p = make_actor(480,112,0) -- avant lave
	--p = make_actor(720,112,0) -- avant l'echelle
	p.viseur = 1 -- 1 pour droite, -1 pour gauche. direction de visée des sorts
	c1= p.x-16
	peeves={x=112,y=104,sprite=7, f=7, st= 7, sz=2, spd=1/5}
	nuage={x=88,y=24,sprite=101, f=192, st=192, sz=3, spd=1/25}
 	torche1={x=32,y=104,sprite=101, f=101, st=101,sz=4, spd=1/5}
 	torche2={x=96,y=104,sprite=101, f=101, st=101,sz=4, spd=1/5}
	torche3={x=336,y=72,sprite=145, f=145, st=145,sz=4, spd=1/5}
 	torche4={x=384,y=72,sprite=145, f=145, st=145,sz=4, spd=1/5}
	-- torches salle magenta
 	torche5={x=712,y=24,sprite=150, f=150, st=150,sz=4, spd=1/6}
	torche6={x=688,y=24,sprite=150, f=150, st=150,sz=4, spd=1/6}
	torche7={x=664,y=24,sprite=150, f=150, st=150,sz=4, spd=1/6}
	torche8={x=640,y=24,sprite=150, f=150, st=150,sz=4, spd=1/6}
	torche9={x=616,y=24,sprite=150, f=150, st=150,sz=4, spd=1/6}

	torche10={x=592,y=24,sprite=166, f=166, st=166,sz=4, spd=1/6}
	torche11={x=568,y=24,sprite=166, f=166, st=166,sz=4, spd=1/6}
	torche12={x=544,y=24,sprite=166, f=166, st=166,sz=4, spd=1/6}
	torche13={x=520,y=24,sprite=166, f=166, st=166,sz=4, spd=1/6}
	torche14={x=496,y=24,sprite=166, f=166, st=166,sz=4, spd=1/6}

	torche15={x=472,y=24,sprite=182, f=182, st=182,sz=4, spd=1/6}
	torche16={x=448,y=24,sprite=182, f=182, st=182,sz=4, spd=1/6}
	torche17={x=424,y=24,sprite=182, f=182, st=182,sz=4, spd=1/6}
	torche18={x=400,y=24,sprite=182, f=182, st=182,sz=4, spd=1/6}
	torche19={x=376,y=24,sprite=182, f=182, st=182,sz=4, spd=1/6}

	torche20={x=352,y=24,sprite=134, f=134, st=134,sz=4, spd=1/6}
	torche21={x=328,y=24,sprite=134, f=134, st=134,sz=4, spd=1/6}
	torche22={x=304,y=24,sprite=134, f=134, st=134,sz=4, spd=1/6}
	torche23={x=280,y=24,sprite=134, f=134, st=134,sz=4, spd=1/6}
	torche24={x=256,y=24,sprite=134, f=134, st=134,sz=4, spd=1/6}
	torche25={x=232,y=24,sprite=134, f=134, st=134,sz=4, spd=1/6}
	torche26={x=208,y=24,sprite=134, f=134, st=134,sz=4, spd=1/6}
	torche27={x=184,y=24,sprite=134, f=134, st=134,sz=4, spd=1/6}

	torche28={x=144,y=24,sprite=161, f=161, st=161,sz=4, spd=1/6}

	-- pieges
	trap = false
	-- monstres
	peeves_head={}
	peeves_head.x = 408
	peeves_head.y = 104
	peeves_head.sprite = 9
	peeves_head.anim="flotte"
	peeves_head.walk={f=9, st=9, sz=2, spd=1/10}
	peeves_head.tag = 2 --monstre
	peeves_head.dx = 0
	peeves_head.dy = 0
	peeves_head.box = {x1=1,y1=1,x2=6,y2=6}
	-- niveau du jeu ou se trouve
	-- le monstre
	peeves_head.location = 1
	peeves_head.degat = 1
	peeves_head.hp = 2
	peeves_head.cd_depla = 20
	peeves_head.cd_current = 0
	add(monstres, peeves_head)

	p.tag = 1
	p.direction = 1
	-- pour les colisions entre mob
	-- et joueur
	-- tag joueur =>1
	-- tag monstre => 2
	-- tag projectile => 1
	
	solid=false
end

function draw_monsters_lvl1()
	if(#monstres == 0) then
		lvl1_success = true
	else 
		for m in all(monstres) do
			spr(anim(m.walk), m.x, m.y)
		end
	end
end
	
-- event loop
function event_loop()
	--print(is_plafoned(), 0, 6, 7)
	--print(is_midplafoned(), 0,12,8)
	--print("tile  x ".. ((p.x - (p.x % 8))/8), ((p.x - (p.x % 8))/8), 12, 7)
	--print("tile y ".. ((p.y - (p.y %8))/8), ((p.x - (p.x % 8))/8), 18, 7)

	if(p.x == 79) then
		offset=1.5
		delay = time() + 5
		music(-1,200)
		sfx(0)
	end
	if(p.x == 80) then
		cinematique=true
 		print("ha!ha!", 88,88,11)
	 	spr(anim(peeves), peeves.x, peeves.y)
	end
	
	if(p.x >= 303) then
		--passage unique, "démarrage du level"
		if(level1 == false) then
			level1 = true
			--on remet le flag solid au bloc pont en bois
			fset(97,0, true)
			music(2)
		end
	end
	if(level1) then
		print("-- chapter 1 --", 248,72, 7)                 
		print("-- the owl who lived --", 234,80, 7)	
		--print(lvl1_success, 264, 34, 8)
	
 		spr(anim(torche3), torche3.x, torche3.y)
	 	spr(anim(torche4), torche4.x, torche4.y)
		--torches salle magenta
	 	spr(anim(torche5), torche5.x, torche5.y)
		spr(anim(torche6), torche6.x, torche6.y)
		spr(anim(torche7), torche7.x, torche7.y)
		spr(anim(torche8), torche8.x, torche8.y)
		spr(anim(torche9), torche9.x, torche9.y)
		--torches salle verte
		spr(anim(torche10), torche10.x, torche10.y)
		spr(anim(torche11), torche11.x, torche11.y)
		spr(anim(torche12), torche12.x, torche12.y)
		spr(anim(torche13), torche13.x, torche13.y)
		spr(anim(torche14), torche14.x, torche14.y)
		--torches salle marron
		spr(anim(torche15), torche15.x, torche15.y)		
		spr(anim(torche16), torche16.x, torche16.y)
		spr(anim(torche17), torche17.x, torche17.y)
		spr(anim(torche18), torche18.x, torche18.y)
		spr(anim(torche19), torche19.x, torche19.y)
		--torches salle bleue
		spr(anim(torche20), torche20.x, torche20.y)
		spr(anim(torche21), torche21.x, torche21.y)
		spr(anim(torche22), torche22.x, torche22.y)
		spr(anim(torche23), torche23.x, torche23.y)
		spr(anim(torche24), torche24.x, torche24.y)
		spr(anim(torche25), torche25.x, torche25.y)
		spr(anim(torche26), torche26.x, torche26.y)
		spr(anim(torche27), torche27.x, torche27.y)

		spr(anim(torche28), torche28.x, torche28.y)

		hud(p.x-8, p.y-8)
		draw_monsters_lvl1();
		move_monsters();
		colisions() --gestion des colisions avec les monstres
		
	end
	
end

function getrandomnumber() 
	return rnd(20) - 10
end
function move_monsters()
	for m in all(monstres) do
		if(level1 and m.cd_current == 0) then
			r = getrandomnumber()
			if(r > 0 and is_rwalled(m) == false and m.x + r <= 426)then
				m.x = r + m.x
			elseif(r < 0  and is_lwalled(m) == false and m.x + r >= 304) then
				m.x = r + m.x
			end
			
			m.cd_current = m.cd_depla 
		elseif(level1 and m.cd_current > 0)then
			m.cd_current -=1
		end
	end
end
-- make actors
function make_actor(x,y, sprite)
	local actor = {}
	actor.x = x
	actor.y = y
	actor.hp = 3
	actor.sprite = sprite
	actor.anim="stand"
	actor.stand={f=17,st=17, sz=5, spd=1/4}
	actor.walk={f=0,st=0, sz=2,spd=1/5}
	--direction
	actor.dx = 0
	actor.dy = 0
	actor.tag = 1
	--boite de colision du perso
	actor.box = {x1=1, y1=1, x2=7, y2=7}
	add(actors, actor)
	return actor
	
end

function make_proj(x,y, sprite, direction)
	local proj = {}
	proj.x = x
	proj.y = y
	proj.sprite = sprite
	proj.anim = "spell"
	proj.spell = {f=198,st=198,sz=1,spd=0}
	proj.tag = 4
	proj.direction = direction
	-- colisions
	proj.box = {x1=3,y1=3,x2=4,y2=5}
	add(projs, proj)
	return proj
end




function anim_actor()
	if(p.anim == "walk") then
		return anim(p.walk)
	end
	if(p.anim == "stand") then
		return anim(p.stand)
	end
	
end
-- draw actor
function draw_actors()
	for a in all(actors) do
		-- lorsque l'acteur a dessiner est un joueur
		if(a.tag ==1) then
			spr(anim_actor(), a.x, a.y)
		end
		-- lorsque l'acteur a dessine est un sortilege
		if(a.tag == 3) then
			spr(anim(a.spell), a.x, a.y)
			-- tout le bazar des if c'est pour éviter que les sorts changent de direction
			-- une fois qu'ils sont tiré
			if(p.direction > 0 )then
				if(a.shoted == "left")then
					a.x -= 2
					if(a.x > p.x +50) del(actors,a)
				end
				if(a.shoted == "right")then
					a.x += 2
					if(a.x < p.x -50) del(actors,a)	
				end
				if(a.shoted == nil) then 
					a.shoted = "right"
					a.x += 2
				end	
			end
			if(p.direction < 0 )then
			 	if(a.shoted == "left")then
					a.x -= 2
					if(a.x > p.x +50) del(actors,a)
				end
				if(a.shoted == "right")then
					a.x += 2
					if(a.x < p.x -50) del(actors,a)	
				end
				if(a.shoted == nil) then 
					a.shoted = "left"
					a.x -= 2
				end	
			end
		end
		if (a.tag == 4) then
			spr(anim(a.spell), a.x, a.y)
			a.y += 2
			if(a.y == 9) del(actors,a)
		end
		

	end
end
actors={}
projs={}
-- draw actor
function draw_projs()
	for p in all(projs) do
		if (p.tag == 4) then
			spr(anim(p.spell), p.x, p.y)
			if(p.direction == "down") then
				p.y += 2
				if(p.y == 54) del(projs,p)
			end
			if(p.direction == "up") then
				p.y -= 2
				if(p.y == 0) del(projs,p)
			end
			if(p.direction == "right") then
				p.x += 2
				if(p.x == 456) del(projs,p)
			end
			
		end
	end
end

--anim
function anim(a)
	a.f += a.spd
	if(a.f >= a.st + a.sz)then
		a.f = a.st
	end
	return flr(a.f)
end

--draw
function _draw()
	if (mode == 0) then
		cls()
		print("brindibou a l'ecole des hiboux" ,8, 16, 7)
		print("un jeu presente par", 32, 24, 7)
		print("marion et flavien", 32, 32, 7)
		print("press x to start", 35, 88, 7)
	elseif (mode == 1) then
		cls()
		mset(432,112,97)
		draw_background()
		spr(anim(nuage), nuage.x, nuage.y)
		spr(anim(torche1), torche1.x, torche1.y)
		spr(anim(torche2), torche2.x, torche2.y)

		if(is_grounded()) then
			p.y = flr(flr(p.y)/8)*8
		end
		
		event_loop()
		draw_actors()
		draw_projs()
		if(btnp(4) and cooldown_recharger == false)then
			shoot()
		end
		if(cooldown_recharger_projectile ==false and trap) then
			projectile()
		end
	elseif (mode == 2) then
		cls()
		--camera(111,14)
		print("game over" ,40, 20, 7)
		print("press x to restart", 25, 40, 7)
		
 		camera(-2, 2)
	elseif (mode == 3) then
		music(-1,200)
		cinematique = true
		print("Victoire !", 70, 16, 7)
		print("MERCI! press X", 70, 8, 7)
	end
	
end
--update
function _update()
	if (mode == 2) then
		music(-1,200)
		cinematique =  true;
		if (btnp(5)) then
			run()
		end
	end
	if (mode == 3)then
		if (btnp(5)) then
			run()
		end
	end
	if (mode == 0) then
		if (btnp(5)) then
			gamestart()
		end
	else
		--cooldown degats hero
		if(cooldown ==true and cooldown_degat >0) then
			cooldown_degat -=1
		end
		if cooldown and cooldown_degat ==0 then
			cooldown = false
		end

		--cooldown tir
		if(cooldown_recharger == true and cooldown_tir >0)then
			cooldown_tir -=1
		end
		if(cooldown_recharger and cooldown_tir == 0) then
			cooldown_recharger = false
		end

		--cooldwon proj
		if(cooldown_recharger_projectile == true and cooldown_projectile >0) then
			cooldown_projectile -=1
		end
		if(cooldown_recharger_projectile and cooldown_projectile == 0) then
			cooldown_recharger_projectile = false
		end
		

		if(p.x == 80) screen_shake(0.95)
		p.anim = "stand"
		local tile = fget(mget(tilex, tiley),0)
		p.dx = 0
		--gauche
		if(btn(0) and is_lwalled(p) == false and cinematique==false) then
			p.direction = -1
			p.dx -=1
		end
		if(btn(1) and is_rwalled(p) == false and cinematique==false) then
			p.direction = 1
			p.dx +=1
		end
		p.x += p.dx
		
		if(is_hitted()) then
			sfx(3)
			degat(1)
		end
		
		if(is_lava()) then
			sfx(3)
			degat(1)
			p.y -= 24;
			if(p.direction > 0) then
				p.x -= 8
			else
				p.x +=8
			end
		end

		if(is_ladder()) then
			if(btn(2)) then
				p.y -= 1
				p.dy -=1
			end
		end

		if(is_trapped()) then
			trap = true
		end
		if(is_levelFinished()) then
			trap = false
			mode = 3
		end
	
		if(is_grounded()) then
			p.dy = 0 --gravite
			-- if jump press 1 time
			if(btnp(2) and cinematique==false) then
				if(is_plafoned())then
					-- rien
				elseif(is_midplafoned()) then
					-- en cas de plafond 
					-- on saute moins haut
					p.dy = -4
				else
					p.dy = -5.8
				end 
		end
	else
		p.dy += 0.98 --gravite
		if(p.dy > 4) p.dy = 4
	end
	p.y += p.dy
	if((btn(0) or btn(1) or btn(2)) and cinematique==false) then
		p.anim = "walk"
		
		if(p.x-64<0 and 0 or p.x-64) then
			camera(p.x-64<0 and 0 or p.x-64, 0)
			
		end
	end
	end
end

function get_box(a)
	local box = {}
	box.x1 = a.x + a.box.x1
	box.y1 = a.y + a.box.y1
	
	box.x2 = a.x + a.box.x2
	box.y2 = a.y + a.box.y2
	return box
end

function check_coll(a,b)
	if(a==b or a.tag == b.tag) return false --no colide
	local box_a = get_box(a)
	local box_b = get_box(b)
	if(box_a.x1 > box_b.x2 or
				box_a.y1 > box_b.y2 or
				box_b.x1 > box_a.x2 or
				box_b.y1 > box_a.y2) then
		return false
	end
	return true
end

-- colisions player vs monstre
function colisions()
	for a in all(actors) do
		for b in all(monstres) do
			if(a.tag == 3 and check_coll(a,b) == true) then 
				b.hp -= 1
				if(b.hp >0) then 
					sfx(3)
					del(actors,a)
					return true
				end
				if(b.hp == 0) then
					sfx(5)
					del(monstres,b)
					del(actors,a)
					return true
				end
			end
			if(a.tag == 1 and check_coll(a,b) == true) then
				if(cooldown_degat == 0) then
					degat(b.degat)
				end
				return true
			end
		end
	end
end

function is_grounded()
	
	-- on get le bloc sous le joueur
		-- +4 pour get le centre du joueur
		bloc = mget(flr(p.x+4)/8, flr(p.y)/8+1)
		--get le flag du bloc
		-- 0 =>1er flag
		return fget(bloc, 0) 
end

-- on verifie si le joueur est sur la lave
function is_lava()
	bloc = mget(flr(p.x+4)/8, flr(p.y)/8+1)
	return fget(bloc, 7)
end

-- on verifie si le joueur est sur une echelle
function is_ladder()
	bloc = mget(flr(p.x+4)/8, flr(p.y)/8)
	return fget(bloc, 6)
end

function is_hitted()
	for a in all(actors) do
		for p in all(projs) do
			if(p.tag == 4 and check_coll(a,p) == true) then
				del(projs, p)
				return true
			end
		end
	end
end

-- on verifie si le joueur déclenche un piege a ses pieds
function is_trapped()
	bloc = mget(flr(p.x+4)/8, flr(p.y)/8+1)
	return fget(bloc, 1)
end

function is_levelFinished()
	bloc = mget(flr(p.x+4)/8, flr(p.y)/8+1)
	return fget(bloc, 2)
end
-- check si un bloc solide
-- se trouve 2 blocs au dessus
-- du joueur
function is_midplafoned()
	-- on get le bloc sous le joueur
		-- +4 pour get le centre du joueur
		bloc = mget(flr(p.x+4)/8, (flr(p.y)/8)-1.5)
		--get le flag du bloc
		-- 0 =>1er flag
		return fget(bloc, 0) 
end

-- check si un bloc solide 
-- se trouve 1 bloc au dessus
-- du joueur
function is_plafoned()
	-- on get le bloc sous le joueur
		-- +4 pour get le centre du joueur
		bloc = mget(flr(p.x+4)/8, (flr(p.y)/8)-1)
		--get le flag du bloc
		-- 0 =>1er flag
		return fget(bloc, 0) 
end

function is_lwalled(a)
	bloc_gauche = mget(flr(a.x+6)/8-1, (flr(a.y)/8))
	
	return fget(bloc_gauche,0)
end

function is_rwalled(a)
	bloc_droit = mget(flr(a.x)/8+1, (flr(a.y)/8))
 return fget(bloc_droit,0)
end





-- collide check
function solid_tile(x, y)
--local mean dont exist outside
	local tilex = ((x - (x % 8)) /8)
	local tiley = ((y - (y % 8)) /8)
	
	-- identifier what tile is
	if(fget(mget(tilex, tiley),0)) then
		--if true, le tile a flag solid
		return true
	else
		return false
	end
	
end

-- background drawing
function draw_background()
	--rectfill(0,0,128,128, 1)
	map(0,0,0,0,128,128)
end

-- screen shake
function screen_shake(n)
  local fade = n
  local offset_x=16-rnd(32)
  local offset_y=16-rnd(32)
  offset_x*=offset
  offset_y*=offset
  
  camera(offset_x,offset_y)
  offset*=fade
  if offset<0.05 then
    offset=0
    
    fset(97,0,false)
 	timer = time()
 	if(timer > delay)then 
    	--fade_scr(1)
     	if(time() > delay + 1) then
  	   		--coordonne lvl 1
 	    	p.x = 304
	     	p.y = 112
	     	camera(p.x-64<0 and 0 or p.x-64, 0)
  	   		--fade_scr(0)
			cinematique = false
			draw_background()
  	   		return
     	end
		 
 	end
	
  end
end

-- "fa" is a number ranging from 0 to 1
-- 1 = 100% faded out
-- 0 = 0% faded out
-- 0.5 = 50% faded out, etc.

function fade_scr(fa)
	fa=max(min(1,fa),0)
	local fn=8
	local pn=15
	local fc=1/fn
	local fi=flr(fa/fc)+1
	local fades={
		{1,1,1,1,0,0,0,0},
		{2,2,2,1,1,0,0,0},
		{3,3,4,5,2,1,1,0},
		{4,4,2,2,1,1,1,0},
		{5,5,2,2,1,1,1,0},
		{6,6,13,5,2,1,1,0},
		{7,7,6,13,5,2,1,0},
		{8,8,9,4,5,2,1,0},
		{9,9,4,5,2,1,1,0},
		{10,15,9,4,5,2,1,0},
		{11,11,3,4,5,2,1,0},
		{12,12,13,5,5,2,1,0},
		{13,13,5,5,2,1,1,0},
		{14,9,9,4,5,2,1,0},
		{15,14,9,4,5,2,1,0}
	}
	
	for n=1,pn do
		pal(n,fades[n][fi],0)
	end
end

function wait(a) for i = 1,a do flip() end end	

-- hud
function hud(x,y)
	hp_bar(p.hp, x,y, 1,1)
end

-- hp_bar
function hp_bar(hp,x,y,w,h)
		if(hp == 1) then
		 spr(195, x,y,w,h)
		 spr(196, x+9,y,w,h)
		 spr(196, x+18,y,w,h)
		end
		if(hp == 2) then
		 spr(195, x,y,w,h)
		 spr(195, x+9,y,w,h)
		 spr(196, x+18,y,w,h)
		end
		if(hp == 3) then
		 spr(195, x,y,w,h)
		 spr(195, x+9,y,w,h)
		 spr(195, x+18,y,w,h)
		end
	
end

function degat(n)
	if(cooldown_degat == 0) then
		p.hp -= n
		sfx(3)
		----on decremente cette variable dans update de 1, 
		--comme elle est appelée 30fois par seconde, ça fait 2s pour pouvoir reprendre des degats
		cooldown_degat = 60 
		cooldown = true
	end


	if (p.hp == 0) then
		mode = 2
	end
end

function shoot()

	bullet = make_actor(p.x, p.y, 198)
	
	bullet.anim = "spell"
	bullet.spell = {f=197,st=197,sz=1,spd=0}
	bullet.tag = 3
	-- 3 pour les sorts
	bullet.tag = 3
	--colisions
	bullet.box = {x1=2,y1=3,x2=6,y2=5}
	cooldown_tir = 8 --0.5s/tir
	cooldown_recharger = true
	sfx(4)
	
end

function projectile()
	proj = make_proj(704, 14, 198, "down")
	proj = make_proj(680, 14, 198, "down")
	proj = make_proj(664, 14, 198, "down")
	proj = make_proj(640, 14, 198, "down")
	proj = make_proj(632, 14, 198, "down")

	proj = make_proj(432, 14, 198, "down")
	proj = make_proj(424, 14, 198, "down")
	proj = make_proj(408, 14, 198, "down")
	proj = make_proj(400, 14, 198, "down")
	proj = make_proj(384, 14, 198, "down")
	proj = make_proj(376, 14, 198, "down")

	proj = make_proj(512, 40, 198, "up")
	proj = make_proj(496, 40, 198, "up")

	proj = make_proj(188, 40, 199, "right")
	
	sfx(4)
	cooldown_projectile = 24
	cooldown_recharger_projectile = true
end

__gfx__
00ffff0000000000000000001111111100000000000000004111222200bbb000000000000bbbbbb000000000222bb22202222220000000000000000000000000
0f7777f000ffff0000000000111111110000000000000000411222210626bb0000bbb0000b6666b00bbbbbb02bbbbbb207777770000000000000000000000000
f757757f0f7777f0000000001111111100000000000000004122222106666b000626bb00066666600b6666b0b777777bb777777b000000000000000000000000
f756657ff757757f0000000011111111000000000000000041fcfff105666b0005666b000626626006666660b777777bb777777b000000000000000000000000
f779977ff756657f0000000011111111000000000000000041fffff10066660000666b000666666006266260b727727bb727727b000000000000000000000000
fffffffff779977f000000001111111100000000000000004778888106666000066666000665566006666660bb7777bbb777777b000000000000000000000000
4fb33bf4ffb33bff0000000011111111000000000000000017788881060660000606600000666600066556600b7777b20bbbbbb0000000000000000000000000
44666644446666440000000011111111000000000000000077888881000066600000666000000000006666000b2222b0000bb000000000000000000000000000
0bbbbbb000ffff0000ffff0000ffff0000ffff0000ffff000000000000000000000000000000000000000000444bb4440c9999cc000000000000000000000000
0b6666b00f7777f00f7777f00f7777f00f7777f00f7777f000000000000000000000000000000000000000004bbbbbb409777999000000000000000000000000
06666660f757757ff777777ff777777ff777777ff757757f0000000000000000000000000000000000000000b777777b09772772000000000000000000000000
06266260f756657ff756657ff776677ff756657ff756657f0000000000000000000000000000000000000000b777777b99777772000000000000000000000000
06666660f779977ff779977ff779977ff779977ff779977f0000000000000000000000000000000000000000b727727b99777772000000000000000000000000
06655660ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000bb7777bb09772772000000000000000000000000
006666004fb33bf44fb33bf44fb33bf44fb33bf44fb33bf400000000000000000000000000000000000000000b7777b409777999000000000000000000000000
00000000446666444466664444666644446666444466664400000000000000000000000000000000000000000b2222b000999900000000000000000000000000
0000000000ffff0000ffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fff77700fff777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffff7576ffff757600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffff7779ffff777900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffff7779ffff777900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000ffffffb3ffffffb300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000fffff600fffff6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000044000444400044000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333344444444cccccccc00000000ccc777cc55555555cccccccc5ccccccc5ccccc55ccc33ccccc3443ccccc443cc55533555553443555554435500000000
3333333344444444cccccccc00077700ccc7677c55555555ccccccc555cccccc55ccc555cc3333ccc334433ccc34433c55333355533443355534433500000000
4444444444444444cccccccc00777700cc77667755555555cccccc55555ccccc555c5555cc33333c33c44c33c334433355333335335445335334433300000000
4444444444444444cccccccc07777770c776666755555555ccccc5555555cccc55555555c334433ccc3443cc33344c3353344335553443553334453300000000
4444444444444444cccccccc77777777c766556755555555cccc55555555cccc55555555c334433ccc34433c33c44ccc53344335553443353354455500000000
4444444444444444cccccccc000777707665556655555555ccc5555555555ccc55555555c334433cc3344c33ccc44ccc53344335533445335554455500000000
4444444444444444cccccccc000000006555555655555555cc5555555555555c55555555c334433c333443ccccc44ccc53344335333443555554455500000000
4444444444444444cccccccc000000005555555555555555c55555555555555555555555c334433c33344333ccc44ccc53344335333443335554455500000000
06666667117667111111011110000000101101011111111111111111cccccccc5555556655556665066666670666666700000000000000000000000000000000
05555556177777711110011110000001000000001111111111111111cccccccc5665555666655555055555560555555600000000000000000000000000000000
05555556776776671110011100000000000000001111111111111111cccccccc5665555555555665055555560555555600000000000000000000000000000000
05555556766766671100001101000000000000001111111111111111cccccccc5555555566655565055555560555555600000000000000000000000000000000
05555556777766671100000110000011000000001111111111111111cccccccc5555665555555566055555560555555600000000000000000000000000000000
05555556667776671100000000100001000000001111111111111111cccccccc5555665566555666055555560555555600000000000000000000000000000000
05555556176667711000000011000000000000001111111117111111cccccccc6555555666656656055555560555555600000000000000000000000000000000
00000005117777111000000010000000000000001111111111111111cccccccc6655556655565555000000050000000500000000000000000000000000000000
000000000999999a000440000000000000044000eeee8eeeeeeee8eeeeee8eeeeee8eeee88888888999999990000000000000000000000000000000000000000
0000000004444449000449000000000000944000eee898eeeeee898eeee898eeee898eee99999999999999990000000000000000000000000000000000000000
0000000004444449000440999999999999044000ee89998eeee8998eee89998eee8998ee999999a9999999a90000000000000000000000000000000000000000
0000000004444449000440000900090000044000ee89a98eeee89a8eee89a98eee8a98eea99a9999a99a99990000000000000000000000000000000000000000
0000000004444449000440000900090000044000eee999eeeee899eeeee999eeeee998ee999a99aa999a99aa0000000000000000000000000000000000000000
0000000004444449000440000900090000044000eee544eeeee544eeeee544eeeee544ee9999999a9999999a0000000000000000000000000000000000000000
0000000004444449000440000900090000044000eee54eeeeee54eeeeee54eeeeee54eee999999a9999999a90000000000000000000000000000000000000000
0000000000000000000440000900090000044000eee44eeeeee44eeeeee44eeeeee44eeea99a9999a99a99990000000000000000000000000000000000000000
11111111000000004400004444222244000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004499994444999944000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004400004444222244000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004499994444999944000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004400004444222244000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004499994444999944000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004400004444222244000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000004499994444999944000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0008000000008000000800000080000000000000ccc0ccccccc10ccccccc1cccccc10ccccc1c0ccc000000000000000000000000000000000000000000000000
0089800000089800008980000898000000000000ccc0cccccc171cccccc171cccc171cccc1710ccc000000000000000000000000000000000000000000000000
0899980000899800089998000899800000000000ccc0ccccc17771cccc1771ccc17771ccc1771ccc000000000000000000000000000000000000000000000000
089a98000089a800089a980008a980000000000000000000017c71000017c100017c710001c71000000000000000000000000000000000000000000000000000
00999000008990000099900000998000000000000555555c0577755c0517755c0577755c0577155c000000000000000000000000000000000000000000000000
00544000005440000054400000544000000000000555555c0564455c0564455c0564455c0564455c000000000000000000000000000000000000000000000000
00540000005400000054000000540000000000000555555c0564555c0564555c0564555c0564555c000000000000000000000000000000000000000000000000
00440000004400000044000000440000000000000000000000440000004400000044000000440000000000000000000000000000000000000000000000000000
999199999558155595558555955815559585155522202222222d02222222d222222d022222d20222000000000000000000000000000000000000000000000000
55515559558985555558985555898555589815552220222222d1d222222d1d2222d1d2222d1d0222000000000000000000000000000000000000000000000000
5551555958999855558998555899985558998555222022222d111d2222d11d222d111d222d11d222000000000000000000000000000000000000000000000000
11111111189a98111189a811189a981118a98111000000000d121d0000d12d000d121d000d21d000000000000000000000000000000000000000000000000000
1555555916999655168996551699965516998655055555520511155205d11552051115520511d552000000000000000000000000000000000000000000000000
15555559165446551654465516544655165446550555555205644552056445520564455205644552000000000000000000000000000000000000000000000000
15555559165466551654665516546655165466550555555205645552056455520564555205645552000000000000000000000000000000000000000000000000
11111111114411111144111111441111114411110000000000440000004400000044000000440000000000000000000000000000000000000000000000000000
888088888889088888889888888908888898088833303333333b03333333b333333b033333b30333000000000000000000000000000000000000000000000000
88808888889a98888889a988889a988889a908883330333333bab333333bab3333bab3333bab0333000000000000000000000000000000000000000000000000
8880888889aaa988889aa98889aaa98889aa9888333033333baaab3333baab333baaab333baab333000000000000000000000000000000000000000000000000
0000000009a8a900009a890009a8a900098a9000000000000ba3ab0000ba3b000ba3ab000b3ab000000000000000000000000000000000000000000000000000
0555555805aaa558059aa55805aaa55805aa95580555555305aaa55305baa55305aaa55305aab553000000000000000000000000000000000000000000000000
05555558056445580564455805644558056445580555555305644553056445530564455305644553000000000000000000000000000000000000000000000000
05555558056455580564555805645558056455580555555305645553056455530564555305645553000000000000000000000000000000000000000000000000
00000000004400000044000000440000004400000000000000440000004400000044000000440000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000004440444444490444444494444449044444940444000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000044404444449a94444449a944449a944449a90444000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000004440444449aaa944449aa94449aaa94449aa9444000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000009a4a900009a490009a4a900094a9000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000555555405aaa554059aa55405aaa55405aa9554000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000555555405644554056445540564455405644554000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000555555405645554056455540564555405645554000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000440000004400000044000000440000000000000000000000000000000000000000000000000000
000000000000000000000000e00e00eee00e00ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000600000000880880e0550550e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000060000000000000000888870e0555550e00000000000bb000000000000000000000000000000000000000000000000000000000000000000000000000
0000000060000000000000000888880e0555550e00333700000bb00000bbbb000000000000000000000000000000000000000000000000000000000000000000
000000006000000000000000e08880eee05550ee00333300000bb00000bbb7000000000000000000000000000000000000000000000000000000000000000000
600000000000000000000000ee080eeeee050eee000000000007b000000000000000000000000000000000000000000000000000000000000000000000000000
660000000000000000000000eee0eeeeeee0eeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
600000000000000000000000eeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000001010000000000000000000000000000010000000000000001010305000000000001000000000000008100000000000000004040000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0355555555555555555555555655030303030350a0a0a0a08585858585858585858585858585858585858585858585858585b5b5b5b5b5b5b5b5b5b5b5b5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959595959595959595959595505000000000000000000000000000000000000000000000000000000000000000
55555556555555555555565555555503030350a0a0a0a08585858585858585858585858585858585858585858585851b1bb51b1bb51b1bb5b5b5b5b5b5b5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595950b0b95950b950b95950b959595959595505000000000000000000000000000000000000000000000000000000000000000
555655555551555655555555555555030350a0a0a0a08585858585858585858585858585858585858585858585858585b5b5b5b5b5b5b5b5b5b5b5b5b5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595959595959595959595959595959595959595505000000000000000000000000000000000000000000000000000000000000000
5555555555555555555655555555555550a0a0a0a085858585858585858585858585858585858585858585858585b5b5b5b5b5b5b5b5b5b5b5b5b5b5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a59595959595959595959595959595959595959595505000000000000000000000000000000000000000000000000000000000000000
5555555655565555565555065555555550a0a0a085858585858585858585858585858585858585858585858585b5b5b5b5b5b5b5b5b5b5b5b5b5b5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5959595959595959595959595959595959595959595505000000000000000000000000000000000000000000000000000000000000000
56555555555555555555555055555503a0a0a0858585851c85858585858585858585858585858585858585b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a595959595959595959595959595959595959595957395505000200000000000000000000000000000000000000000000000000000000000
555555555555555555555555505050505b50505050505050505050505050505050505050505050505085b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5a5a5a5a50ca50ca5a5a5a5a5a5a59595959595959595959595959595959595959595957395505020200000000000000000000000000000000000000000000000000000000000
52525252525252525252525252505050505050505050505858585858585858585858585858585858585858585858585858585858585858586958695869585858585869586958695858585858585858585858585858585858585a5050507250505020200000000000000000000000000000000000000000000000000000000000
5353535353535353535353535353535050505050505050000000000000000000000000000000600000909090000000909090600000005858585858585858585858585858585858585858585858585958585858585858585858505050507250505000000000000000000000000000000000000000000000000000000000000000
d060606060606060606060606060605050505050505050000000000000000000000000000000606060909090606060909090600000005858585858585858585858585858585858585858585858585958585858585858585858505050507250505000000000000000000000000000000000000000000000000000000000000000
d0606060606060606060606060606050505050505050500000000000000000000000000000d0606060909090606060909090000000005858585858585858585858585858585858585858585858585858585858585858585858505050507250505000000000000000000000000000000000000000000000000000000000000000
d0606060606060606060606060606050505050505050500000000000000000000000000000d0606060606060606060600000000000005858585858585858000020202020202000000000000000000000000000000000000000000000007250505000000000000000000000000000000000000000000000000000000000000000
d0202060606060606060606060606060000050505050500000000000000000000000000000d0606060606060606060600000000000005858585858585858000020202020202020000000000000000000000000000000000000000000007250505000000000000000000000000000000000000000000000000000000000000000
d0602060606060606060606060606060600050505050500000000000000000000000000000d0606060606060606060600000000000002000000000000000000000000000000000202000000000000000000000000000000000000000007250505000000000000000000000000000000000000000000000000000000000000000
d0600260626363636363636364606060000050505050500000000000000000000000000000d0606060606060606060600000000000002000002020202020000000000000000000000000000000000000000000000000000000000000007250505000000000000000000000000000000000000000000000000000000000000000
5050505061616161616161616150505050505050505050575757575757575757575757575757585858585858585858585858585858585850505050505050506959695969596959695969596959695969596959695969596950505050505050505000000000000000000000000000000000000000000000000000000000000000
6060606000000000000060600000006000000000000000000000000000000000000000000000595900000000000000000000000000000058585858585858586a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a58580000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000606000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000006060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000d00001705018050190501e0501d050190501805000000000001805000000000001805000000000001805000000000000000000000000000000000000000000000000000000000000000000000000000000000
001d001f170501c0501c0501f0501e0501e0501c0501c0501c0502305023050210502105021050210501e0501e0501e0501e0501c0501c0501c0501f0501e0501e0501a0501a0501a0501e0501e0501705017000
0010000006100061000615006150061500615006150061500615000000000000a15009150081500715007150071500715006150061500615006150061500615000000000001210013150101500f1500f1500f150
0002000024150211501f150150501b150171500b050131500f1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100003535033350313502e3502a35027350213501f3501b35017350133500f3500c3500a350083500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000800000440037750297501b75011750097500375001750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050000234502345021450214501f4501f4501d450244502a4502d4502d450000000000001000010000100001000010000000000000000000000000000000000000000000000000000000000000000000000000
00160000000002405023050230500000000000370503405033050000001f4002405024050240501e4000e0500e0500e0500e0500f0500f0500f0500f0500f0500f05000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001255000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 00424344
03 01424344
03 02434344
00 03424344
00 04424344
00 05424344
00 06424344
03 07424344

